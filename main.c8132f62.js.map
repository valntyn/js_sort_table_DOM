{"version":3,"sources":["scripts/main.js"],"names":["menu","document","querySelector","body","list","querySelectorAll","addEventListener","e","item","target","closest","index","cellIndex","contains","sort","a","b","aText","children","innerText","bText","localeCompare","aNum","replace","forEach","el","append"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAOF,SAASC,cAAc,SAC9BE,EAAOD,EAAKE,iBAAiB,MAEnCL,EAAKM,iBAAiB,QAAS,SAAAC,GACvBC,IAAAA,EAAOD,EAAEE,OAAOC,QAAQ,MACxBC,EAAQJ,EAAEE,OAAOG,UAElBJ,GAASR,EAAKa,SAASL,IAIR,EAAIJ,GACrBU,KAAK,SAACC,EAAGC,GACFC,IAAAA,EAAQF,EAAEG,SAASP,GAAOQ,UAC1BC,EAAQJ,EAAEE,SAASP,GAAOQ,UAExBR,OAAAA,GACD,KAAA,EACA,KAAA,EACIM,OAAAA,EAAMI,cAAcD,GAExB,KAAA,EACI,OAACH,GAASG,EAEd,KAAA,EAIIE,OAHQL,EAAMM,QAAQ,MAAO,KACrBH,EAAMG,QAAQ,MAAO,IAItC,QACS,OAAA,KAIHC,QAAQ,SAAAC,GACXtB,OAAAA,EAAKuB,OAAOD","file":"main.c8132f62.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst menu = document.querySelector('thead');\nconst body = document.querySelector('tbody');\nconst list = body.querySelectorAll('tr');\n\nmenu.addEventListener('click', e => {\n  const item = e.target.closest('th');\n  const index = e.target.cellIndex;\n\n  if (!item || !menu.contains(item)) {\n    return;\n  }\n\n  const sortedCells = [...list]\n    .sort((a, b) => {\n      const aText = a.children[index].innerText;\n      const bText = b.children[index].innerText;\n\n      switch (index) {\n        case 0:\n        case 1:\n          return aText.localeCompare(bText);\n\n        case 2:\n          return +aText - +bText;\n\n        case 3:\n          const aNum = +(aText.replace(/\\W/g, ''));\n          const bNum = +(bText.replace(/\\W/g, ''));\n\n          return aNum - bNum;\n\n        default:\n          return 0;\n      }\n    });\n\n  sortedCells.forEach(el => {\n    return body.append(el);\n  });\n});\n"]}